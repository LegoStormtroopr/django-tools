# http://doc.pytest.org/en/latest/customize.html#builtin-configuration-file-options
# https://pytest-django.readthedocs.io/en/latest/

[pytest]
DJANGO_SETTINGS_MODULE=django_tools_test_project.test_settings
testpaths =
    django_tools
    django_tools_test_project
    django_tools_tests

# http://doc.pytest.org/en/latest/customize.html#confval-norecursedirs
norecursedirs = .* .git __pycache__ coverage* dist
    dynamic_site
;    fields
;    template
filterwarnings =
    once
addopts =
    --verbose

    #--create-db
    --reuse-db
    --nomigrations

    --showlocals
    #--trace-config
    --doctest-modules

    --no-cov-on-fail
    --cov
    --cov-report=term-missing
    --cov-report xml:coverage.xml
    --cov-report html:coverage_html/
    --cov-config pytest.ini

    # per-test capturing method: one of fd|sys|no:
    # --capture=no

    # run the last failures first:
    --failed-first

;    # re-run only failures:
;    --last-failed
;
;    # run all tests if no tests failed in the last run:
;    --last-failed-no-failures all

    # sort new tests first:
    --new-first

doctest_optionflags = ALLOW_UNICODE ELLIPSIS NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL


##############################################################################
# coverage config:

[run]
branch = True
source = django_tools

[report]
omit =
    */migrations/*

# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

ignore_errors = True
